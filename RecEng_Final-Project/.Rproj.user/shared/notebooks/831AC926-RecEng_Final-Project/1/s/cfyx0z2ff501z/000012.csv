"1","
"
"0","MoviesSubset <- bigMovieLense[1:(nrow(bigMovieLense)*0.4),]"
"0","set.seed(123)"
"0","Multi_evaluate <- evaluationScheme(MoviesSubset, method = ""split"", train=0.8, given = 5, goodRating = 4)"
"0","algorithms <- list("
"0","  ""random"" = list(name=""RANDOM"", param=NULL),"
"0","  ""popular"" = list(name=""POPULAR"", param=NULL),"
"0","  ""User Based CFnn50"" = list(name=""UBCF"", param=list(nn=50)),"
"0","  ""User Based CFCos"" = list(name=""UBCF"", param=list(method = ""Cosine"")),  "
"0","  ""Item Based CFPea"" = list(name=""IBCF"", param=list(method = ""Pearson"")),"
"0","  ""ALS"" = list(name=""ALS"", param=list(k=50)),"
"0","  ""SVD"" = list(name=""SVD"", param=list(k=50))"
"0",")"
"0","Multi_results <- evaluate(Multi_evaluate, "
"0","                          method = algorithms, "
"0","                          type = ""topNList"", "
"0","                          parameter = list(normalize = ""Z-Score""),"
"0","                          n=c(1, 5, seq(10,100,10)))"
"1","RANDOM"
"1"," "
"1","run fold/sample [model time/prediction time]"
"1","
	"
"1"," "
"1","1"
"1"," "
"1"," "
"1","["
"1","0.003"
"1","sec/"
"1","1.164"
"1","sec] "
"1","
"
"1","POPULAR"
"1"," "
"1","run fold/sample [model time/prediction time]"
"1","
	"
"1"," "
"1","1"
"1"," "
"1"," "
"1","["
"1","0.033"
"1","sec/"
"1","4.05"
"1","sec] "
"1","
"
"1","UBCF"
"1"," "
"1","run fold/sample [model time/prediction time]"
"1","
	"
"1"," "
"1","1"
"1"," "
"1"," "
"1","["
"1","0.029"
"1","sec/"
"1","27.192"
"1","sec] "
"1","
"
"1","UBCF"
"1"," "
"1","run fold/sample [model time/prediction time]"
"1","
	"
"1"," "
"1","1"
"1"," "
"1"," "
"1","["
"1","0.027"
"1","sec/"
"1","27.25"
"1","sec] "
"1","
"
"1","IBCF"
"1"," "
"1","run fold/sample [model time/prediction time]"
"1","
	"
"1"," "
"1","1"
"1"," "
"1"," "
"1","["
"1","152.621"
"1","sec/"
"1","0.472"
"1","sec] "
"1","
"
"1","ALS"
"1"," "
"1","run fold/sample [model time/prediction time]"
"1","
	"
"1"," "
"1","1"
"1"," "
"1"," "
"2","Unknown parameter: k"
"1","Available parameter (with default values):
"
"1","normalize"
"1","	"
"1"," = "
"1"," "
"1","NULL"
"1","
"
"1","lambda"
"1","	"
"1"," = "
"1"," "
"1","0.1"
"1","
"
"1","n_factors"
"1","	"
"1"," = "
"1"," "
"1","10"
"1","
"
"1","n_iterations"
"1","	"
"1"," = "
"1"," "
"1","10"
"1","
"
"1","min_item_nr"
"1","	"
"1"," = "
"1"," "
"1","1"
"1","
"
"1","seed"
"1","	"
"1"," = "
"1"," "
"1","NULL"
"1","
"
"1","verbose"
"1","	"
"1"," = "
"1"," "
"1","FALSE"
"1","
"
"1","["
"1","0.01"
"1","sec/"
"1","164.841"
"1","sec] "
"1","
"
"1","SVD"
"1"," "
"1","run fold/sample [model time/prediction time]"
"1","
	"
"1"," "
"1","1"
"1"," "
"1"," "
"1","["
"1","3.356"
"1","sec/"
"1","1.181"
"1","sec] "
"1","
"
"0","plot(Multi_results, annotate=c(1,2), legend = ""topleft"")"
